{
  "name": "wx-ai-advanced-action",
  "type": "action",
  "valid": true,
  "status": "Available",
  "created": "2025-03-05T11:51:36.314Z",
  "updated": "2025-03-05T12:34:08.704Z",
  "language": "xx",
  "skill_id": "6d97b746-11c0-4da5-b5e8-a5145c9ad7f0",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_352",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Question:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_352",
            "next_step": "step_743"
          },
          {
            "step": "step_743",
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_352"
                  },
                  "skill_variable": "question"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v4/deployments/{deployment-id}/ai_service_stream",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "ecd7f1e1c6fdf70cd6507c553774e5a34ae2203daaeff94d28cfa203c97d9bd6",
                  "match_scenario": 10,
                  "catalog_item_id": "54c6e0d4-6879-4144-843f-b11261bde1af"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "expression": "[\n  {\n    \"role\": \"user\",\n    \"content\": \"${question}\"  \n  }\n]"
                      },
                      "parameter": "messages"
                    }
                  ],
                  "path": [
                    {
                      "value": {
                        "skill_variable": "wx_deployed_id"
                      },
                      "parameter": "deployment-id"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "skill_variable": "wx_api_version"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_743_result_1",
                "stream_response_mapping": {
                  "partial_item": [
                    {
                      "mapping": [
                        {
                          "name": "text",
                          "value": "choices[0].message.delta.content"
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                }
              }
            },
            "variable": "step_743"
          }
        ],
        "title": "Invoke AI service (stream)",
        "action": "action_40731",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_40731_intent_18609"
        },
        "variables": [
          {
            "title": "Question:",
            "privacy": {
              "enabled": false
            },
            "variable": "step_352",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_743",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_743_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_40731-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_352",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Question:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_352",
            "next_step": "step_743"
          },
          {
            "step": "step_743",
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_352"
                  },
                  "skill_variable": "question"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v4/deployments/{deployment-id}/ai_service",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "30e3d2b109d6d6941414a9bdd7c0c71f95b23ee3ea752269a43a45c0890d2eb0",
                  "match_scenario": 10,
                  "catalog_item_id": "54c6e0d4-6879-4144-843f-b11261bde1af"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "expression": "[\n  {\n    \"role\": \"user\",\n    \"content\": \"${question}\"  \n  }\n]"
                      },
                      "parameter": "messages"
                    }
                  ],
                  "path": [
                    {
                      "value": {
                        "skill_variable": "wx_deployed_id"
                      },
                      "parameter": "deployment-id"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "skill_variable": "wx_api_version"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_743_result_1"
              }
            },
            "variable": "step_743",
            "next_step": "step_542"
          },
          {
            "step": "step_542",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_743_result_1.body.choices}[0].message.content"
                  },
                  "skill_variable": "response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_542",
            "condition": {
              "eq": [
                {
                  "variable": "step_743_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            }
          }
        ],
        "title": "Invoke AI service",
        "action": "action_40731-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_40731_intent_18609-2"
        },
        "variables": [
          {
            "title": "Question:",
            "variable": "step_352",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_542",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_743",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_743_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_40731-3",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_352",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Question:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_352",
            "next_step": "step_743"
          },
          {
            "step": "step_743",
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_352"
                  },
                  "skill_variable": "question"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v1/deployments/{deployment-id}/text/generation",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "dfc4ce3500c3b3980a82872bd0da8aac99eeac8f43662d8379729a5c3f697381",
                  "match_scenario": 10,
                  "catalog_item_id": "54c6e0d4-6879-4144-843f-b11261bde1af"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "expression": "{ \"question\": ${question} }"
                      },
                      "parameter": "parameters.prompt_variables"
                    }
                  ],
                  "path": [
                    {
                      "value": {
                        "skill_variable": "wx_deployed_id"
                      },
                      "parameter": "deployment-id"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "skill_variable": "wx_api_version"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_743_result_1"
              }
            },
            "variable": "step_743",
            "next_step": "step_542"
          },
          {
            "step": "step_542",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": ""
                          },
                          {
                            "skill_variable": "response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${step_743_result_1.body.results}[0].generated_text"
                  },
                  "skill_variable": "response"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_542",
            "condition": {
              "eq": [
                {
                  "variable": "step_743_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            }
          }
        ],
        "title": "Invoke deployed template",
        "action": "action_40731-3",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_40731_intent_18609-3"
        },
        "variables": [
          {
            "title": "Question:",
            "variable": "step_352",
            "data_type": "any"
          },
          {
            "title": "{variable}",
            "variable": "step_542",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_743",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_743_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_40731-4",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_352",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Question:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_352",
            "next_step": "step_743"
          },
          {
            "step": "step_743",
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_352"
                  },
                  "skill_variable": "question"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/ml/v1/deployments/{deployment-id}/text/generation_stream",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "f54a80b6c16955b5770426ea8cbf04e7e6495e8d67145ed834e1459f362450aa",
                  "match_scenario": 10,
                  "catalog_item_id": "54c6e0d4-6879-4144-843f-b11261bde1af"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "expression": "{ \"question\": ${question} }"
                      },
                      "parameter": "parameters.prompt_variables"
                    }
                  ],
                  "path": [
                    {
                      "value": {
                        "skill_variable": "wx_deployed_id"
                      },
                      "parameter": "deployment-id"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "skill_variable": "wx_api_version"
                      },
                      "parameter": "version"
                    }
                  ]
                },
                "result_variable": "step_743_result_1",
                "stream_response_mapping": {
                  "partial_item": [
                    {
                      "mapping": [
                        {
                          "name": "text",
                          "value": "results[0].generated_text"
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                }
              }
            },
            "variable": "step_743"
          }
        ],
        "title": "Invoke deployed template (stream)",
        "action": "action_40731-4",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_40731_intent_18609-4"
        },
        "variables": [
          {
            "title": "Question:",
            "variable": "step_352",
            "data_type": "any"
          },
          {
            "title": "No response",
            "privacy": {
              "enabled": false
            },
            "variable": "step_743",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_743_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            },
            "next_step": "step_004"
          },
          {
            "step": "step_004",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_004",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Danger word detected"
                }
              ]
            },
            "next_step": "step_005"
          },
          {
            "step": "step_005",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "It seems this conversation would be best managed by a human agent. Let me connect you to one of our agents."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_005",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Profanity detected"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          },
          {
            "title": "It seems this conversation would be best managed",
            "variable": "step_004",
            "data_type": "any"
          },
          {
            "title": "Profanity - It seems this conversation",
            "variable": "step_005",
            "data_type": "any"
          }
        ],
        "next_action": "run_always",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "danger_word_detected",
            "title": "Connect to agent",
            "handlers": [],
            "resolver": {
              "type": "fallback"
            },
            "variable": "danger_word_detected_variable",
            "condition": {
              "entity": "danger_words"
            },
            "next_step": "profanity_detected"
          },
          {
            "step": "profanity_detected",
            "title": "Show warning",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please use appropriate language when interacting with the assistant."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [
              {
                "type": "max_hits",
                "handler": "max_hits_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "max_hits": 2,
            "resolver": {
              "type": "end_action"
            },
            "variable": "profanity_detected_variable",
            "condition": {
              "entity": "profane_words"
            }
          }
        ],
        "title": "Trigger word detected",
        "action": "run_always",
        "boosts": [],
        "handlers": [],
        "variables": [
          {
            "title": "Profanity detected",
            "variable": "danger_word_detected_variable",
            "data_type": "any"
          },
          {
            "title": "Profane word detected",
            "variable": "profanity_detected_variable",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else"
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_40731",
        "disambiguation_opt_out": true
      }
    ],
    "intents": [
      {
        "intent": "action_40731_intent_18609",
        "examples": [
          {
            "text": "Invoke AI service"
          }
        ]
      },
      {
        "intent": "action_40731_intent_18609-2",
        "examples": [
          {
            "text": "Invoke AI service"
          }
        ]
      },
      {
        "intent": "action_40731_intent_18609-3",
        "examples": [
          {
            "text": "Invoke deployed template"
          }
        ]
      },
      {
        "intent": "action_40731_intent_18609-4",
        "examples": [
          {
            "text": "Invoke deployed template (stream)"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "Agent help"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Can I connect to an agent?"
          },
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          }
        ],
        "description": "Please transfer me to an agent"
      }
    ],
    "entities": [
      {
        "entity": "danger_words",
        "values": [],
        "fuzzy_match": false
      },
      {
        "entity": "profane_words",
        "values": [],
        "fuzzy_match": false
      }
    ],
    "metadata": {
      "api_version": {
        "major_version": "v2",
        "minor_version": "2018-11-08"
      }
    },
    "variables": [
      {
        "title": "question",
        "privacy": {
          "enabled": false
        },
        "variable": "question",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "response",
        "privacy": {
          "enabled": false
        },
        "variable": "response",
        "data_type": "string",
        "description": ""
      },
      {
        "title": "wx_api_version",
        "privacy": {
          "enabled": false
        },
        "variable": "wx_api_version",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "2023-05-29"
        }
      },
      {
        "title": "wx_deployed_id",
        "privacy": {
          "enabled": false
        },
        "variable": "wx_deployed_id",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "83fad4bc-bc36-4ab4-9532-3268ec6ba557"
        }
      },
      {
        "title": "wx_project_id",
        "privacy": {
          "enabled": false
        },
        "variable": "wx_project_id",
        "data_type": "string",
        "description": "",
        "initial_value": {
          "scalar": "39e65882-0638-4b79-8f89-ce680924399f"
        }
      }
    ],
    "data_types": [],
    "collections": [],
    "counterexamples": [],
    "system_settings": {
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "auto_learn": {
        "apply": true
      },
      "topic_switch": {
        "enabled": true,
        "messages": {}
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "search_routing": {
        "target": "conversational_search"
      }
    },
    "learning_opt_out": false
  },
  "description": "created for assistant d6918313-5cbb-4b58-b11f-8686475aa60f",
  "assistant_id": "d6918313-5cbb-4b58-b11f-8686475aa60f",
  "workspace_id": "6d97b746-11c0-4da5-b5e8-a5145c9ad7f0",
  "dialog_settings": {},
  "next_snapshot_version": "1",
  "environment_id": "868efe14-537f-42ab-8a27-18317a42a101"
}