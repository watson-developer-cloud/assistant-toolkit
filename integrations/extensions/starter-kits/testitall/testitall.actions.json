{
  "name": "TestItALL Extension Actions",
  "type": "action",
  "counts": {
    "actions": 23,
    "intents": 21,
    "entities": 5,
    "data_types": 0,
    "collections": 4,
    "global_variables": 5
  },
  "status": "Available",
  "language": "en",
  "skill_id": "cb65dff5-2ab9-40d5-a447-b373d834ba99",
  "workspace": {
    "actions": [
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_863",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "one moment let me delete it"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test",
                "type": "integration_interaction",
                "method": "DELETE",
                "internal": {
                  "spec_hash_id": "c9bd72e2862ec86e75a643ace7cbbc1d93302f7f164629ea7dc07a6288a0d2a7",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_863_result_1"
              }
            },
            "variable": "step_863",
            "next_step": "step_509"
          },
          {
            "step": "step_509",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Indeed it was deleted - result is:"
                          },
                          {
                            "variable": "step_863_result_1",
                            "variable_path": "body"
                          },
                          {
                            "scalar": "   status code:  "
                          },
                          {
                            "variable": "step_863_result_1",
                            "variable_path": "body.status"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_509"
          }
        ],
        "title": "Test HTTP DELETE",
        "action": "action_1543",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_1543_intent_5385"
        },
        "variables": [
          {
            "title": "aggregated variable",
            "variable": "operation_result",
            "data_type": "any"
          },
          {
            "title": "aggregated variable",
            "variable": "operation_result_status",
            "data_type": "any"
          },
          {
            "variable": "step_138_result_1",
            "data_type": "any"
          },
          {
            "title": "Indeed it was deleted - result is:{variable} status code: {varia",
            "variable": "step_509",
            "data_type": "any"
          },
          {
            "title": "one moment let me delete it",
            "variable": "step_863",
            "data_type": "any"
          },
          {
            "variable": "step_863_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_30035",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_863",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "let me patch it"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test",
                "type": "integration_interaction",
                "method": "PATCH",
                "internal": {
                  "spec_hash_id": "18bbb292a4302d016c054e0736b3ec12bcfdcab8ea91b134ad8a20ccb182b053",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_863_result_1"
              }
            },
            "variable": "step_863",
            "next_step": "step_509"
          },
          {
            "step": "step_509",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Indeed I patched it- result is:"
                          },
                          {
                            "variable": "step_863_result_1",
                            "variable_path": "body"
                          },
                          {
                            "scalar": "   status code:  "
                          },
                          {
                            "variable": "step_863_result_1",
                            "variable_path": "body.status"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_509"
          }
        ],
        "title": "Test HTTP PATCH",
        "action": "action_1543-2",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_1543_intent_5385-2"
        },
        "variables": [
          {
            "title": "aggregated variable",
            "variable": "operation_result",
            "data_type": "any"
          },
          {
            "title": "aggregated variable",
            "variable": "operation_result_status",
            "data_type": "any"
          },
          {
            "variable": "step_138_result_1",
            "data_type": "any"
          },
          {
            "title": "Indeed I patched it- result is:{variable} status code: {variable",
            "privacy": {
              "enabled": false
            },
            "variable": "step_509",
            "data_type": "any"
          },
          {
            "title": "let me patch it",
            "privacy": {
              "enabled": false
            },
            "variable": "step_863",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_863_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "fallback",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_138",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "this is a post"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "248e8308de7b4f1a1d814f6be315ee5b74225b96958050f1279be129290dd5a8",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "scalar": "blablabla"
                      },
                      "parameter": "some_content"
                    }
                  ]
                },
                "result_variable": "step_138_result_1"
              }
            },
            "variable": "step_138",
            "next_step": "step_386"
          },
          {
            "step": "step_386",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Indeed it was posted - result is:  "
                          },
                          {
                            "variable": "step_138_result_1",
                            "variable_path": "body"
                          },
                          {
                            "scalar": "   status code:  "
                          },
                          {
                            "variable": "step_138_result_1",
                            "variable_path": "body.status"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_386"
          }
        ],
        "title": "Test HTTP POST",
        "action": "action_20585",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_20585_intent_24221"
        },
        "variables": [
          {
            "title": "aggregated variable",
            "variable": "operation_result",
            "data_type": "any"
          },
          {
            "title": "aggregated variable",
            "variable": "operation_result_status",
            "data_type": "any"
          },
          {
            "title": "this is a post",
            "variable": "step_138",
            "data_type": "any"
          },
          {
            "variable": "step_138_result_1",
            "data_type": "any"
          },
          {
            "title": "Indeed it was posted - result is: status code: {variable}",
            "variable": "step_386",
            "data_type": "any"
          }
        ],
        "next_action": "action_1543-2",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_112",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "pls specify a new value to add to our session variable"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_112",
            "next_step": "step_414"
          },
          {
            "step": "step_414",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "currently your array is "
                          },
                          {
                            "skill_variable": "myArray"
                          },
                          {
                            "scalar": "\n\ndo you want to add another item?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    },
                    {
                      "label": "No",
                      "value": {
                        "input": {
                          "text": "No"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "expression": "${myArray}.append(${step_112})"
                  },
                  "skill_variable": "myArray"
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text": "I'm sorry, I did not catch that, please restate your response."
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-yes-no",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_414",
            "next_step": "step_487"
          },
          {
            "step": "step_487",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "ok we are done with building the array. It is currently "
                          },
                          {
                            "skill_variable": "myArray"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_487",
            "condition": {
              "eq": [
                {
                  "variable": "step_414"
                },
                {
                  "scalar": "no"
                }
              ]
            },
            "next_step": "step_574"
          },
          {
            "step": "step_574",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "asking again"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "replay",
              "clear": [
                {
                  "variable": "step_112"
                },
                {
                  "variable": "step_414"
                }
              ]
            },
            "variable": "step_574",
            "condition": {
              "eq": [
                {
                  "variable": "step_414"
                },
                {
                  "scalar": "yes"
                }
              ]
            },
            "next_step": "step_426"
          },
          {
            "step": "step_426",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "let's call the extension"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/arrays-object",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "23f638583be5b3133e9e10d5b23849c84a02321b935dae33556e01c865dca465",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "skill_variable": "myArray"
                      },
                      "parameter": "my_array"
                    }
                  ]
                },
                "result_variable": "step_426_result_1"
              }
            },
            "variable": "step_426",
            "next_step": "step_863"
          },
          {
            "step": "step_863",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Got the reply. my array should be reversed: "
                          },
                          {
                            "variable": "step_426_result_1",
                            "variable_path": "body.reverse_array"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_863",
            "condition": {
              "eq": [
                {
                  "variable": "step_426_result_1",
                  "variable_path": "success"
                },
                {
                  "scalar": true
                }
              ]
            }
          }
        ],
        "title": "Test parse array inside object",
        "action": "action_21392",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_21392_intent_30689"
        },
        "variables": [
          {
            "title": "pls specify a new value to add to our session variable",
            "variable": "step_112",
            "data_type": "any"
          },
          {
            "title": "currently your array is {variable} do you want to add another it",
            "variable": "step_414",
            "data_type": "yes_no"
          },
          {
            "title": "let's call the extension",
            "variable": "step_426",
            "data_type": "any"
          },
          {
            "variable": "step_426_result_1",
            "data_type": "any"
          },
          {
            "title": "ok we are done with building the array. It is currently {variabl",
            "variable": "step_487",
            "data_type": "any"
          },
          {
            "title": "asking again",
            "variable": "step_574",
            "data_type": "any"
          },
          {
            "title": "Got the reply. my array should be reversed: {variable}",
            "variable": "step_863",
            "data_type": "any"
          }
        ],
        "next_action": "action_12249",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_331",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I’m about to call an extension that will stream a response using SSE (Server-Sent Events)."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/stream/timeout",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "937ab64d4b8380bbef096d265f29d9632ee0a5ee8d30995198423fe7e77dc894",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_331_result_1",
                "stream_response_mapping": {
                  "partial_item": [
                    {
                      "mapping": [
                        {
                          "name": "text",
                          "value": "results[0].generated_text"
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                }
              }
            },
            "variable": "step_331"
          }
        ],
        "title": "Test a long response in Server-Sent Events (SSE)",
        "action": "action_22451",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_22451_intent_31436"
        },
        "variables": [
          {
            "title": "I’m about to call an extension that will stream a response using",
            "privacy": {
              "enabled": false
            },
            "variable": "step_331",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_331_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_34745",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_992",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please make sure the authorization for custom extension is not configured. Otherwise the Authorization header value will be overridden.\n\n<br />\n\n\n\nPlease enter the value to be used in Authorization header:"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "response_collection_behavior": "always_ask"
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_992",
            "next_step": "step_710"
          },
          {
            "step": "step_710",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Now calling the extension with the given value set as the auth header..."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/auth_header",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "4709b84bd687e9848832654c0fdb5a134ab7964c33934782c53a1fad0a348056",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "request_mapping": {
                  "header": [
                    {
                      "value": {
                        "variable": "step_992"
                      },
                      "parameter": "Authorization"
                    }
                  ]
                },
                "result_variable": "step_710_result_1"
              }
            },
            "variable": "step_710",
            "next_step": "step_274"
          },
          {
            "step": "step_274",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Your auth header: "
                          },
                          {
                            "variable": "step_992"
                          },
                          {
                            "scalar": "\n\nServer received auth header: "
                          },
                          {
                            "variable": "step_710_result_1",
                            "variable_path": "body.auth_header"
                          },
                          {
                            "scalar": "\n\n<br />\n\n\n\nTwo values should be the same. Otherwise, it is possible that the auth header is overriden by the extension's auth configuration."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_274"
          }
        ],
        "title": "Test set auth header with context variable",
        "action": "action_22557",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_22557_intent_12065"
        },
        "variables": [
          {
            "title": "Your auth header: {variable} Server received auth header: {varia",
            "variable": "step_274",
            "data_type": "any"
          },
          {
            "title": "Now calling the extension with the given value set as the auth h",
            "variable": "step_710",
            "data_type": "any"
          },
          {
            "variable": "step_710_result_1",
            "data_type": "any"
          },
          {
            "title": "Please make sure the authorization for custom extension is not c",
            "variable": "step_992",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_3462",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_658",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I will show you how I handle error"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/error",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "39f6ab0451de35c1810c345b125e5c25f105ec719b81fb95297832eca5191f46",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_658_result_1"
              }
            },
            "variable": "step_658",
            "next_step": "step_436"
          },
          {
            "step": "step_436",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "So this is your error: "
                          },
                          {
                            "variable": "step_658_result_1",
                            "variable_path": "body"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_436"
          }
        ],
        "title": "Test handle error in response",
        "action": "action_26118",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_26118_intent_41514"
        },
        "variables": [
          {
            "title": "So this is your error: {variable}",
            "variable": "step_436",
            "data_type": "any"
          },
          {
            "title": "I will show you how I handle error",
            "privacy": {
              "enabled": false
            },
            "variable": "step_658",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_658_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_45207",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_739",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "PUT is now in the house"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test",
                "type": "integration_interaction",
                "method": "PUT",
                "internal": {
                  "spec_hash_id": "bbf2bdd46be4526fd226330a20f0e665e835d4c20e2a78f04173633c930da918",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "scalar": "blablabla"
                      },
                      "parameter": "some_content"
                    }
                  ]
                },
                "result_variable": "step_739_result_1"
              }
            },
            "variable": "step_739",
            "next_step": "step_368"
          },
          {
            "step": "step_368",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Indeed it was updated - result is:"
                          },
                          {
                            "variable": "step_739_result_1",
                            "variable_path": "body"
                          },
                          {
                            "scalar": "   status code:  "
                          },
                          {
                            "variable": "step_739_result_1",
                            "variable_path": "body.status"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_368"
          }
        ],
        "title": "Test HTTP PUT",
        "action": "action_30035",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_30035_intent_49329"
        },
        "variables": [
          {
            "title": "aggregated variable",
            "variable": "operation_result",
            "data_type": "any"
          },
          {
            "title": "aggregated variable",
            "variable": "operation_result_status",
            "data_type": "any"
          },
          {
            "title": "Indeed it was updated - result is:{variable} status code: {varia",
            "variable": "step_368",
            "data_type": "any"
          },
          {
            "variable": "step_658_result_1",
            "data_type": "any"
          },
          {
            "title": "PUT is now in the house",
            "variable": "step_739",
            "data_type": "any"
          },
          {
            "variable": "step_739_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_20585",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_367",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I will show you how custom extensions handles a non-JSON response"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/non-json-response",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "e7b0b26798ecd3ce7abd86d34f113e3a253d7b8afcda67c31cf56340c8541ed0",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_367_result_1"
              }
            },
            "variable": "step_367",
            "next_step": "step_505"
          },
          {
            "step": "step_505",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Status Code** should be \"422\", received: "
                          },
                          {
                            "variable": "step_367_result_1",
                            "variable_path": "status"
                          },
                          {
                            "scalar": "\n\n<br />\n\n\n\n**Ran Successfully** should be \"false\", got: "
                          },
                          {
                            "variable": "step_367_result_1",
                            "variable_path": "success"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Error** should be a \"non valid JSON\" error: "
                          },
                          {
                            "variable": "step_367_result_1",
                            "variable_path": "body.message"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "**Payload** should be an html snippet: "
                          },
                          {
                            "variable": "step_367_result_1",
                            "variable_path": "body.payload"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_505"
          }
        ],
        "title": "Test non json response",
        "action": "action_30398",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_30398_intent_13880"
        },
        "variables": [
          {
            "title": "I will show you how custom extensions handles a non-JSON respons",
            "privacy": {
              "enabled": false
            },
            "variable": "step_367",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_367_result_1",
            "data_type": "any"
          },
          {
            "title": "**Status Code** should be \"422\", received: {variable} <br /> **R",
            "privacy": {
              "enabled": false
            },
            "variable": "step_505",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_39186",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_143",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please provide a response to trigger the post message webhook."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_48298",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_143",
            "next_step": "step_106"
          },
          {
            "step": "step_106",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Value of the variable 'post-webhook-message': "
                          },
                          {
                            "skill_variable": "post_webhook_message"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_106"
          }
        ],
        "title": "Test post-message webhook",
        "action": "action_3462",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_3462_intent_18095"
        },
        "variables": [
          {
            "title": "Value of the variable 'post-webhook-message': {variable}",
            "variable": "step_106",
            "data_type": "any"
          },
          {
            "title": "Please provide a response to trigger the post message webhook.",
            "variable": "step_143",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_40637",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_617",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I’m about to call an extension that will stream a response using SSE (Server-Sent Events)."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/stream",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "9e9048ccb56c63c9fe291105e6c7596a8693979aee76979d7e567b5700ef9774",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_617_result_1",
                "stream_response_mapping": {
                  "partial_item": [
                    {
                      "mapping": [
                        {
                          "name": "text",
                          "value": "results[0].generated_text"
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                }
              }
            },
            "variable": "step_617"
          }
        ],
        "title": "Test Server-Sent Events (SSE)",
        "action": "action_34745",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_34745_intent_10885"
        },
        "variables": [
          {
            "title": "I’m about to call an extension that will stream a response using",
            "privacy": {
              "enabled": false
            },
            "variable": "step_617",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_617_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_30398",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_628",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "let me get it"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "fd33f499ee9cb2c0ed79c1dce820f4f957bb51c765044420fa9b11bb16c80e83",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_628_result_1"
              }
            },
            "variable": "step_628",
            "next_step": "step_386"
          },
          {
            "step": "step_386",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Indeed I got it- result is:"
                          },
                          {
                            "variable": "step_628_result_1",
                            "variable_path": "body"
                          },
                          {
                            "scalar": "   status code:  "
                          },
                          {
                            "variable": "step_628_result_1",
                            "variable_path": "body.status"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_386"
          }
        ],
        "title": "Test HTTP GET",
        "action": "action_34746",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_34746_intent_20809"
        },
        "variables": [
          {
            "title": "aggregated variable",
            "variable": "operation_result",
            "data_type": "any"
          },
          {
            "title": "aggregated variable",
            "variable": "operation_result_status",
            "data_type": "any"
          },
          {
            "title": "Indeed I got it- result is:{variable} status code: {variable}",
            "variable": "step_386",
            "data_type": "any"
          },
          {
            "title": "let me get it",
            "variable": "step_628",
            "data_type": "any"
          },
          {
            "variable": "step_628_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_658_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_739_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_1543",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_913",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "type in a param"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "question": {
              "free_text": true,
              "only_populate_when_prompted": true
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_913",
            "next_step": "step_538"
          },
          {
            "step": "step_538",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "your param is "
                          },
                          {
                            "variable": "step_913"
                          },
                          {
                            "scalar": " , now calling the extension"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/params/{path_param}",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "0f2b3166ab23a282ec4e6b080d140c65d8e38b6e3d69da9f07f9ec5055ff471f",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "request_mapping": {
                  "path": [
                    {
                      "value": {
                        "variable": "step_913"
                      },
                      "parameter": "path_param"
                    }
                  ],
                  "query": [
                    {
                      "value": {
                        "variable": "step_913"
                      },
                      "parameter": "query_param"
                    }
                  ],
                  "header": [
                    {
                      "value": {
                        "variable": "step_913"
                      },
                      "parameter": "header_param"
                    }
                  ]
                },
                "result_variable": "step_538_result_1"
              }
            },
            "variable": "step_538",
            "next_step": "step_205"
          },
          {
            "step": "step_205",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "extension figured the param as: "
                          },
                          {
                            "variable": "step_538_result_1",
                            "variable_path": "body"
                          },
                          {
                            "scalar": "   status code:  "
                          },
                          {
                            "variable": "step_538_result_1",
                            "variable_path": "status"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_205"
          }
        ],
        "title": "Test post with parameters",
        "action": "action_38662",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_38662_intent_45880"
        },
        "variables": [
          {
            "title": "aggregated variable",
            "variable": "operation_result",
            "data_type": "any"
          },
          {
            "title": "aggregated variable",
            "variable": "operation_result_status",
            "data_type": "any"
          },
          {
            "title": "extension figured the param as: {variable} status code: {variabl",
            "variable": "step_205",
            "data_type": "any"
          },
          {
            "title": "your param is {variable} , now calling the extension",
            "variable": "step_538",
            "data_type": "any"
          },
          {
            "variable": "step_538_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_628_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_658_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_739_result_1",
            "data_type": "any"
          },
          {
            "title": "type in a param",
            "variable": "step_913",
            "data_type": "any"
          }
        ],
        "next_action": "action_22832",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_646",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "We will call extension two times, without user message between them.\n\n\nCalling extension..."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "fd33f499ee9cb2c0ed79c1dce820f4f957bb51c765044420fa9b11bb16c80e83",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_646_result_1"
              }
            },
            "variable": "step_646",
            "next_step": "step_507"
          },
          {
            "step": "step_507",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Response: "
                          },
                          {
                            "variable": "step_646_result_1",
                            "variable_path": "body"
                          },
                          {
                            "scalar": "\n\nCalling extension again..."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test",
                "type": "integration_interaction",
                "method": "GET",
                "internal": {
                  "spec_hash_id": "fd33f499ee9cb2c0ed79c1dce820f4f957bb51c765044420fa9b11bb16c80e83",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_507_result_1"
              }
            },
            "variable": "step_507",
            "next_step": "step_154"
          },
          {
            "step": "step_154",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Response: "
                          },
                          {
                            "variable": "step_507_result_1",
                            "variable_path": "body"
                          },
                          {
                            "scalar": "\n\nCalling extension again using another endpoint..."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test",
                "type": "integration_interaction",
                "method": "DELETE",
                "internal": {
                  "spec_hash_id": "c9bd72e2862ec86e75a643ace7cbbc1d93302f7f164629ea7dc07a6288a0d2a7",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_154_result_1"
              }
            },
            "variable": "step_154",
            "next_step": "step_579"
          },
          {
            "step": "step_579",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Response: "
                          },
                          {
                            "variable": "step_154_result_1",
                            "variable_path": "body"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_579"
          }
        ],
        "title": "Test consecutive extension calls",
        "action": "action_39186",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_39186_intent_23416"
        },
        "variables": [
          {
            "title": "Response: {variable} Calling extension again using another endpo",
            "variable": "step_154",
            "data_type": "any"
          },
          {
            "variable": "step_154_result_1",
            "data_type": "any"
          },
          {
            "title": "Response: {variable} Calling extension again...",
            "variable": "step_507",
            "data_type": "any"
          },
          {
            "variable": "step_507_result_1",
            "data_type": "any"
          },
          {
            "title": "Response: {variable}",
            "variable": "step_579",
            "data_type": "any"
          },
          {
            "title": "We will call extension two times, without user message between t",
            "variable": "step_646",
            "data_type": "any"
          },
          {
            "variable": "step_646_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_22557",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_767",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Value of the variable 'pre_webhook_message': "
                          },
                          {
                            "skill_variable": "pre_webhook_message"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_767"
          }
        ],
        "title": "Test pre-message webhook",
        "action": "action_40637",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_40637_intent_11889"
        },
        "variables": [
          {
            "title": "Value of the variable 'pre_webhook_message': {variable}",
            "variable": "step_767",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_21392",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_732",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "How much delay do you want the extension server to wait before send response (in seconds)?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Enter a number."
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "sys-number",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_732",
            "next_step": "step_955"
          },
          {
            "step": "step_955",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Calling extension..."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/delay",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "a031f18fc11262a101c825f227f0f0edcc5efe2b326e2bd100d5886678fca6e3",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "request_mapping": {
                  "body": [
                    {
                      "value": {
                        "variable": "step_732"
                      },
                      "parameter": "sleep_time"
                    }
                  ]
                },
                "result_variable": "step_955_result_1"
              }
            },
            "variable": "step_955",
            "next_step": "step_766"
          },
          {
            "step": "step_766",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "OK, Your request has been logged. result is: "
                          },
                          {
                            "variable": "step_955_result_1",
                            "variable_path": "body"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_766"
          }
        ],
        "title": "Test response with a delay",
        "action": "action_45207",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_45207_intent_43212"
        },
        "variables": [
          {
            "title": "aggregated variable",
            "variable": "delay_result_sleep_duration",
            "data_type": "any"
          },
          {
            "title": "aggregated variable",
            "variable": "delay_result_status",
            "data_type": "any"
          },
          {
            "variable": "step_149_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_538_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_628_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_658_result_1",
            "data_type": "any"
          },
          {
            "title": "How much delay do you want the extension server to wait before s",
            "variable": "step_732",
            "data_type": "number"
          },
          {
            "variable": "step_739_result_1",
            "data_type": "any"
          },
          {
            "title": "OK, Your request has been logged. result is: {variable}",
            "variable": "step_766",
            "data_type": "any"
          },
          {
            "title": "Calling extension...",
            "variable": "step_955",
            "data_type": "any"
          },
          {
            "variable": "step_955_result_1",
            "data_type": "any"
          }
        ],
        "next_action": "action_34746",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_947",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Let's see how we handle errors in Server-Stream events."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/stream/error",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "659adeb54c70bb9a693215097aed4f7ab36178b7ad420b414a2e061468491d86",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_947_result_1",
                "stream_response_mapping": {
                  "partial_item": [
                    {
                      "mapping": [
                        {
                          "name": "text",
                          "value": "results[0].generated_text"
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                }
              }
            },
            "variable": "step_947",
            "next_step": "step_554"
          },
          {
            "step": "step_554",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "So this is your error: "
                          },
                          {
                            "variable": "step_947_result_1",
                            "variable_path": "body"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_554"
          }
        ],
        "title": "Test handling an error response in Server-Sent Events (SSE)",
        "action": "action_5330",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_5330_intent_20647"
        },
        "variables": [
          {
            "title": "So this is your error: {variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_554",
            "data_type": "any"
          },
          {
            "title": "Let's see how we handle errors in Server-Stream events.",
            "privacy": {
              "enabled": false
            },
            "variable": "step_947",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_947_result_1",
            "data_type": "any"
          }
        ],
        "launch_mode": "learning",
        "next_action": "action_22451",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true,
          "never_return": false
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. Please rephrase your question."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "end_action"
            },
            "variable": "step_001",
            "condition": {
              "lte": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": ""
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "invoke_another_action_and_end",
              "invoke_action": {
                "action": "fallback",
                "policy": "default",
                "parameters": null,
                "result_variable": "step_002_result_1"
              }
            },
            "variable": "step_002",
            "condition": {
              "gt": [
                {
                  "system_variable": "no_action_matches_count"
                },
                {
                  "scalar": 3
                }
              ]
            }
          }
        ],
        "title": "No action matches",
        "action": "anything_else",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "anything_else"
        },
        "variables": [
          {
            "title": "I am afraid I do not understand what you are asking, please re-p",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "variable": "step_002_result_1",
            "data_type": "any"
          }
        ],
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I'm afraid I don't understand. I can connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_001",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Step validation failed"
                }
              ]
            },
            "next_step": "step_002"
          },
          {
            "step": "step_002",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Sorry I couldn't assist you. I will connect you to an agent right away."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_002",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "Agent requested"
                }
              ]
            },
            "next_step": "step_003"
          },
          {
            "step": "step_003",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "I am afraid I do not understand what you are asking, let me connect you to an agent."
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "connect_to_agent",
              "response": {
                "transfer_info": {
                  "target": {}
                },
                "agent_available": {
                  "message": "Let's send you to an available agent."
                },
                "agent_unavailable": {
                  "message": "There are no agents available at this time. When one becomes available, we'll connect you."
                },
                "message_to_human_agent": ""
              }
            },
            "variable": "step_003",
            "condition": {
              "eq": [
                {
                  "system_variable": "fallback_reason"
                },
                {
                  "scalar": "No action matches"
                }
              ]
            }
          }
        ],
        "title": "Fallback",
        "action": "fallback",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "fallback_connect_to_agent"
        },
        "variables": [
          {
            "title": "I'm afraid I don't understand. I can connect you to an agent.",
            "variable": "step_001",
            "data_type": "any"
          },
          {
            "title": "Sorry I couldn't assist you. I will connect you to an agent righ",
            "variable": "step_002",
            "data_type": "any"
          },
          {
            "title": "I am afraid I do not understand what you are asking, let me conn",
            "variable": "step_003",
            "data_type": "any"
          }
        ],
        "next_action": "anything_else",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_251",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please make sure you've configured the authentication method when adding the extension.\n\nWhich security method do u wanna check?"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                },
                {
                  "options": [
                    {
                      "label": "basic",
                      "value": {
                        "input": {
                          "text": "basic"
                        }
                      }
                    },
                    {
                      "label": "bearer",
                      "value": {
                        "input": {
                          "text": "bearer"
                        }
                      }
                    },
                    {
                      "label": "apikey",
                      "value": {
                        "input": {
                          "text": "apikey"
                        }
                      }
                    },
                    {
                      "label": "oauth2-authCode",
                      "value": {
                        "input": {
                          "text": "oauth2-authCode"
                        }
                      }
                    },
                    {
                      "label": "oauth2-password",
                      "value": {
                        "input": {
                          "text": "oauth2-password"
                        }
                      }
                    },
                    {
                      "label": "oauth2-clientCred",
                      "value": {
                        "input": {
                          "text": "oauth2-clientCred"
                        }
                      }
                    },
                    {
                      "label": "oauth2-customApikey",
                      "value": {
                        "input": {
                          "text": "oauth2-customApikey"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text": "I didn't catch that. Select a valid option:"
                        }
                      ],
                      "response_type": "text"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_6835",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_251",
            "next_step": "step_836"
          },
          {
            "step": "step_836",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "you have selected "
                          },
                          {
                            "variable": "step_251"
                          },
                          {
                            "scalar": ", calling it"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/security/{method}",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "f43754755baa579ca59fb605a63096a7b752a3ad2b05d8138609c83e6aa0ebee",
                  "match_scenario": 12,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "request_mapping": {
                  "path": [
                    {
                      "value": {
                        "variable": "step_251"
                      },
                      "parameter": "method"
                    }
                  ]
                },
                "result_variable": "step_836_result_1"
              }
            },
            "variable": "step_836",
            "next_step": "step_341"
          },
          {
            "step": "step_341",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "the result of your call is:    "
                          },
                          {
                            "variable": "step_836_result_1",
                            "variable_path": "body.message"
                          },
                          {
                            "scalar": " status code: "
                          },
                          {
                            "variable": "step_836_result_1",
                            "variable_path": "status"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "context": {
              "variables": []
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_341",
            "condition": {
              "expression": "${step_836_result_1.status}<400"
            },
            "next_step": "step_902"
          },
          {
            "step": "step_902",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "The call had an error - status is: "
                          },
                          {
                            "variable": "step_836_result_1",
                            "variable_path": "status"
                          },
                          {
                            "scalar": " The full error is: "
                          },
                          {
                            "variable": "step_836_result_1",
                            "variable_path": "body.message"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_902",
            "condition": {
              "expression": "${step_836_result_1.status}>399"
            }
          }
        ],
        "title": "Test calling extension with different authentication methods",
        "action": "action_22832",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_22832_intent_9949"
        },
        "variables": [
          {
            "title": "aggregated variable",
            "variable": "operation_result",
            "data_type": "any"
          },
          {
            "title": "aggregated variable",
            "variable": "operation_result_status",
            "data_type": "any"
          },
          {
            "variable": "step_149_result_1",
            "data_type": "any"
          },
          {
            "title": "Please make sure you've configured the authentication method whe",
            "variable": "step_251",
            "data_type": "any"
          },
          {
            "title": "the result of your call is: {variable} status code: {variable}",
            "variable": "step_341",
            "data_type": "any"
          },
          {
            "variable": "step_491_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_538_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_628_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_658_result_1",
            "data_type": "any"
          },
          {
            "variable": "step_739_result_1",
            "data_type": "any"
          },
          {
            "title": "you have selected {variable}, calling it",
            "privacy": {
              "enabled": false
            },
            "variable": "step_836",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_836_result_1",
            "data_type": "any"
          },
          {
            "title": "The call had an error - status is: {variable} The full error is:",
            "privacy": {
              "enabled": false
            },
            "variable": "step_902",
            "data_type": "any"
          }
        ],
        "next_action": "action_26118",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_001",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text": "Welcome, how can I assist you?"
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_001"
          }
        ],
        "title": "Greet customer",
        "action": "welcome",
        "boosts": [],
        "handlers": [],
        "condition": {
          "expression": "welcome"
        },
        "variables": [
          {
            "variable": "step_001",
            "data_type": "any"
          }
        ],
        "next_action": "action_5330",
        "disambiguation_opt_out": true
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_588",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm about to call an extension which will return a large response that exceeds the custom extension repsonse limit"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/response-too-large",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "96ce6dd90e55b70b75d4aa0f87ef7789ada12309b34b036fd5fac4df585862bd",
                  "match_scenario": 10,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_588_result_1"
              }
            },
            "variable": "step_588",
            "next_step": "step_962"
          },
          {
            "step": "step_962",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "The extension call fails because the extension responded with a result that larger than 100 KB.\n\nExtension call success: "
                          },
                          {
                            "variable": "step_588_result_1",
                            "variable_path": "success"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_962"
          }
        ],
        "title": "Test handle a too large response from extension",
        "action": "action_11679",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_11679_intent_29725"
        },
        "variables": [
          {
            "title": "I'm about to call an extension which will return a large respons",
            "privacy": {
              "enabled": false
            },
            "variable": "step_588",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_588_result_1",
            "data_type": "any"
          },
          {
            "title": "The extension call fails because the extension responded with a ",
            "variable": "step_962",
            "data_type": "any"
          }
        ],
        "next_action": "action_38662",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      },
      {
        "type": "standard",
        "steps": [
          {
            "step": "step_526",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "I'm about to call an extension which will return context that is almost too large for WA session."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "callout",
              "callout": {
                "path": "/test/context-almost-too-large",
                "type": "integration_interaction",
                "method": "POST",
                "internal": {
                  "spec_hash_id": "2970100c50c1735d107fad0403ab72a0d8e92400591f2a34c587f28a40e1a0a4",
                  "match_scenario": 10,
                  "catalog_item_id": "98fca447-d6fa-4c91-bf8f-6a7d58bed5fb"
                },
                "result_variable": "step_526_result_1"
              }
            },
            "variable": "step_526",
            "next_step": "step_677"
          },
          {
            "step": "step_677",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Extension call success: "
                          },
                          {
                            "variable": "step_526_result_1",
                            "variable_path": "success"
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_677",
            "next_step": "step_949"
          },
          {
            "step": "step_949",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "Please provide some response to trigger the 400 Session state exceeds the 130kb size limit error."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential",
                  "repeat_on_reprompt": false
                },
                {
                  "options": [
                    {
                      "label": "Yes",
                      "value": {
                        "input": {
                          "text": "Yes"
                        }
                      }
                    }
                  ],
                  "response_type": "option",
                  "repeat_on_reprompt": true
                }
              ]
            },
            "handlers": [
              {
                "type": "not_found",
                "title": "validation_not_found_handler",
                "output": {
                  "generic": [
                    {
                      "values": [
                        {
                          "text_expression": {
                            "concat": [
                              {
                                "scalar": "I didn't catch that. Select a valid option:"
                              }
                            ]
                          }
                        }
                      ],
                      "response_type": "text",
                      "selection_policy": "incremental"
                    }
                  ]
                },
                "handler": "validation_not_found_handler",
                "resolver": {
                  "type": "prompt_again"
                },
                "next_handler": "validation_not_found_max_tries_handler"
              },
              {
                "type": "not_found_max_tries",
                "title": "validation_not_found_max_tries_handler",
                "handler": "validation_not_found_max_tries_handler",
                "resolver": {
                  "type": "fallback"
                }
              }
            ],
            "question": {
              "entity": "entity_48614",
              "max_tries": 3
            },
            "resolver": {
              "type": "continue"
            },
            "variable": "step_949",
            "next_step": "step_371"
          },
          {
            "step": "step_371",
            "output": {
              "generic": []
            },
            "context": {
              "variables": [
                {
                  "value": {
                    "variable": "step_526_result_1",
                    "variable_path": "body.data"
                  },
                  "skill_variable": "content_value"
                },
                {
                  "value": {
                    "variable": "step_526_result_1",
                    "variable_path": "body.data"
                  },
                  "skill_variable": "content_value_copy"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_371",
            "next_step": "step_105"
          },
          {
            "step": "step_105",
            "output": {
              "generic": [
                {
                  "values": [
                    {
                      "text_expression": {
                        "concat": [
                          {
                            "scalar": "You should not see this message. You should see a 400 error here instead."
                          }
                        ]
                      }
                    }
                  ],
                  "response_type": "text",
                  "selection_policy": "sequential"
                }
              ]
            },
            "handlers": [],
            "resolver": {
              "type": "continue"
            },
            "variable": "step_105"
          }
        ],
        "title": "Test handle an almost too large response for context storage",
        "action": "action_12249",
        "boosts": [],
        "handlers": [],
        "condition": {
          "intent": "action_12249_intent_48727"
        },
        "variables": [
          {
            "title": "You should not see this message. You should see a 400 error here",
            "privacy": {
              "enabled": false
            },
            "variable": "step_105",
            "data_type": "any"
          },
          {
            "title": "",
            "privacy": {
              "enabled": false
            },
            "variable": "step_371",
            "data_type": "any"
          },
          {
            "title": "I'm about to call an extension which will return context that is",
            "privacy": {
              "enabled": false
            },
            "variable": "step_526",
            "data_type": "any"
          },
          {
            "privacy": {
              "enabled": false
            },
            "variable": "step_526_result_1",
            "data_type": "any"
          },
          {
            "title": "Extension call success: {variable}",
            "privacy": {
              "enabled": false
            },
            "variable": "step_677",
            "data_type": "any"
          },
          {
            "title": "Please provide some response to trigger the 400 Session state ex",
            "privacy": {
              "enabled": false
            },
            "variable": "step_949",
            "data_type": "any"
          }
        ],
        "next_action": "action_11679",
        "topic_switch": {
          "allowed_from": true,
          "allowed_into": true
        },
        "disambiguation_opt_out": false
      }
    ],
    "intents": [
      {
        "intent": "action_30398_intent_13880",
        "examples": [
          {
            "text": "test non json response"
          }
        ]
      },
      {
        "intent": "action_22557_intent_12065",
        "examples": [
          {
            "text": "authorization context var"
          },
          {
            "text": "authorization header"
          },
          {
            "text": "authorization context variable"
          },
          {
            "text": "auth header"
          },
          {
            "text": "Test set auth header with context variable"
          }
        ]
      },
      {
        "intent": "action_22832_intent_9949",
        "examples": [
          {
            "text": "oauth"
          },
          {
            "text": "authentication"
          },
          {
            "text": "bearer auth"
          },
          {
            "text": "basic auth"
          },
          {
            "text": "api key auth"
          },
          {
            "text": "security"
          }
        ]
      },
      {
        "intent": "action_22451_intent_31436",
        "examples": [
          {
            "text": "Test a long response in Server-Sent Events (SSE)"
          }
        ]
      },
      {
        "intent": "action_39186_intent_23416",
        "examples": [
          {
            "text": "consecutive"
          },
          {
            "text": "multiple calls"
          },
          {
            "text": "consecutive calls"
          },
          {
            "text": "Test consecutive extension calls"
          }
        ]
      },
      {
        "intent": "fallback_connect_to_agent",
        "examples": [
          {
            "text": "I would like to speak to a human"
          },
          {
            "text": "I would like to speak to someone"
          },
          {
            "text": "Call agent"
          },
          {
            "text": "Agent help"
          },
          {
            "text": "Can I connect to an agent?"
          }
        ],
        "description": "Please transfer me to an agent"
      },
      {
        "intent": "action_38662_intent_45880",
        "examples": [
          {
            "text": "params"
          },
          {
            "text": "Test post with parameters"
          },
          {
            "text": "post with parameters"
          },
          {
            "text": "parameters"
          }
        ]
      },
      {
        "intent": "action_21392_intent_30689",
        "examples": [
          {
            "text": "Test parse array inside object"
          },
          {
            "text": "Array inside object"
          },
          {
            "text": "Arrays Object"
          }
        ]
      },
      {
        "intent": "action_1543_intent_5385",
        "examples": [
          {
            "text": "just delete it"
          },
          {
            "text": "can u delete"
          },
          {
            "text": "how about deleting it"
          },
          {
            "text": "DELETE"
          },
          {
            "text": "pld delete"
          }
        ]
      },
      {
        "intent": "action_40637_intent_11889",
        "examples": [
          {
            "text": "Test pre-message webhook"
          },
          {
            "text": "pre-message webhook"
          },
          {
            "text": "pre-webhook"
          },
          {
            "text": "pre-message"
          }
        ]
      },
      {
        "intent": "action_5330_intent_20647",
        "examples": [
          {
            "text": "Test handling an error response in Server-Sent Events (SSE)"
          }
        ]
      },
      {
        "intent": "action_3462_intent_18095",
        "examples": [
          {
            "text": "post-webhook"
          },
          {
            "text": "Test post-message webhook"
          },
          {
            "text": "post-message"
          },
          {
            "text": "post-message webhook"
          }
        ]
      },
      {
        "intent": "action_12249_intent_48727",
        "examples": [
          {
            "text": "Almost Too Large Context"
          },
          {
            "text": "ContextAlmostTooLarge"
          },
          {
            "text": "Context Almost Too Large"
          }
        ]
      },
      {
        "intent": "action_34745_intent_10885",
        "examples": [
          {
            "text": "Test Server-Sent Events (SSE)"
          },
          {
            "text": "stream events"
          }
        ]
      },
      {
        "intent": "action_34746_intent_20809",
        "examples": [
          {
            "text": "GET IT"
          },
          {
            "text": "get operation"
          },
          {
            "text": "GET"
          },
          {
            "text": "GO Get it"
          },
          {
            "text": "he got it"
          },
          {
            "text": "just get it"
          }
        ]
      },
      {
        "intent": "action_11679_intent_29725",
        "examples": [
          {
            "text": "Response Too Large"
          },
          {
            "text": "Large Response"
          },
          {
            "text": "ResponsetTooLarge"
          }
        ]
      },
      {
        "intent": "action_45207_intent_43212",
        "examples": [
          {
            "text": "more more time"
          },
          {
            "text": "delay"
          },
          {
            "text": "delay request"
          },
          {
            "text": "delay the request for at least 30 seconds"
          },
          {
            "text": "long time"
          },
          {
            "text": "pls long request"
          }
        ]
      },
      {
        "intent": "action_30035_intent_49329",
        "examples": [
          {
            "text": "PUT"
          },
          {
            "text": "Just put it"
          },
          {
            "text": "put operation"
          },
          {
            "text": "PUT IT"
          },
          {
            "text": "put is the name"
          }
        ]
      },
      {
        "intent": "action_20585_intent_24221",
        "examples": [
          {
            "text": "just post it"
          },
          {
            "text": "I want to post"
          },
          {
            "text": "POST"
          },
          {
            "text": "poster it"
          },
          {
            "text": "nail it"
          }
        ]
      },
      {
        "intent": "action_26118_intent_41514",
        "examples": [
          {
            "text": "Just show me how u handle error"
          },
          {
            "text": "Exception"
          },
          {
            "text": "handle error"
          },
          {
            "text": "integration sent back an error"
          },
          {
            "text": "Wrong"
          },
          {
            "text": "Problem in calling integration"
          },
          {
            "text": "Error"
          }
        ]
      },
      {
        "intent": "action_1543_intent_5385-2",
        "examples": [
          {
            "text": "http patch"
          },
          {
            "text": "patch it"
          },
          {
            "text": "PATCH"
          },
          {
            "text": "go patch it"
          }
        ]
      }
    ],
    "entities": [
      {
        "entity": "entity_48614",
        "values": [
          {
            "type": "synonyms",
            "value": "Yes",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_6835",
        "values": [
          {
            "type": "synonyms",
            "value": "apikey",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "basic",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "bearer",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "oauth2-authCode",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "oauth2-clientCred",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "oauth2-customApikey",
            "synonyms": []
          },
          {
            "type": "synonyms",
            "value": "oauth2-password",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "entity_48298",
        "values": [
          {
            "type": "synonyms",
            "value": "Yes",
            "synonyms": []
          }
        ],
        "fuzzy_match": true
      },
      {
        "entity": "sys-number",
        "values": []
      },
      {
        "entity": "sys-yes-no",
        "values": []
      }
    ],
    "metadata": {
      "skill": {
        "counts": {
          "actions": 23,
          "intents": 21,
          "entities": 5,
          "data_types": 0,
          "collections": 4,
          "global_variables": 5
        }
      },
      "api_version": {
        "major_version": "v2",
        "minor_version": "2021-11-27"
      }
    },
    "variables": [
      {
        "title": "content_value",
        "variable": "content_value",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "content_value_copy",
        "privacy": {
          "enabled": false
        },
        "variable": "content_value_copy",
        "data_type": "any",
        "description": ""
      },
      {
        "title": "myArray",
        "variable": "myArray",
        "data_type": "any",
        "description": "",
        "initial_value": {
          "expression": "[]"
        }
      },
      {
        "title": "post_webhook_message",
        "variable": "post_webhook_message",
        "data_type": "any",
        "description": "The message set by the post-webhook",
        "initial_value": {
          "scalar": "empty"
        }
      },
      {
        "title": "pre_webhook_message",
        "variable": "pre_webhook_message",
        "data_type": "any",
        "description": "The message set by the pre-webhook",
        "initial_value": {
          "scalar": "empty"
        }
      }
    ],
    "data_types": [],
    "collections": [
      {
        "title": "Authentication",
        "collection": "collection_22440",
        "action_references": [
          {
            "action": "action_22832"
          }
        ]
      },
      {
        "title": "Webhooks",
        "collection": "collection_45987",
        "action_references": [
          {
            "action": "action_3462"
          },
          {
            "action": "action_40637"
          }
        ]
      },
      {
        "title": "HTTP Methods",
        "collection": "collection_48238",
        "action_references": [
          {
            "action": "action_30035"
          },
          {
            "action": "action_1543-2"
          },
          {
            "action": "action_1543"
          },
          {
            "action": "action_20585"
          },
          {
            "action": "action_34746"
          }
        ]
      },
      {
        "title": "Test",
        "collection": "collection_41346",
        "action_references": [
          {
            "action": "action_5330"
          },
          {
            "action": "action_39186"
          },
          {
            "action": "action_22451"
          },
          {
            "action": "action_30398"
          },
          {
            "action": "action_12249"
          },
          {
            "action": "action_45207"
          },
          {
            "action": "action_11679"
          },
          {
            "action": "action_34745"
          },
          {
            "action": "action_26118"
          },
          {
            "action": "action_22557"
          },
          {
            "action": "action_38662"
          },
          {
            "action": "action_21392"
          }
        ]
      }
    ],
    "counterexamples": [],
    "system_settings": {
      "nlp": {
        "model": "latest"
      },
      "variable": {
        "format": {
          "time": {
            "pattern": "short"
          },
          "currency": {
            "fraction_digits": 2
          }
        }
      },
      "launch_mode": {
        "default": "learning",
        "enabled": false,
        "learning": {
          "step_retry_threshold": 2,
          "use_connect_to_support": "more_often",
          "single_answer_clarification": "more_often",
          "disambiguation_clarification": "more_often"
        },
        "confident": {
          "step_retry_threshold": 4,
          "use_connect_to_support": "sometimes",
          "single_answer_clarification": "sometimes",
          "disambiguation_clarification": "sometimes"
        }
      },
      "topic_switch": {
        "enabled": true,
        "messages": {
          "confirmation_failure": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Please reply back with yes or no"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          },
          "confirmation_request": {
            "generic": [
              {
                "values": [
                  {
                    "text_expression": {
                      "concat": [
                        {
                          "scalar": "Do you want to return to your previous topic "
                        },
                        {
                          "system_variable": "digressed_from"
                        },
                        {
                          "scalar": "?"
                        }
                      ]
                    }
                  }
                ],
                "response_type": "text",
                "selection_policy": "sequential"
              }
            ]
          }
        },
        "max_tries": 3
      },
      "disambiguation": {
        "prompt": "Did you mean:",
        "enabled": true,
        "randomize": true,
        "max_suggestions": 5,
        "suggestion_text_policy": "title",
        "none_of_the_above_prompt": "None of the above",
        "use_connect_to_support_prompt": "Connect to support",
        "single_answer_clarification_prompt": "Something else"
      },
      "intent_classification": {
        "training_backend_version": "v2"
      },
      "spelling_auto_correct": true
    },
    "learning_opt_out": true,
    "language": "en"
  },
  "description": "created for assistant 4d72bd70-1094-4cf5-87a6-0f429367d834",
  "dialog_settings": {
    "source_assistant": "392d3cd7-1ee1-4e74-9bf4-37684f2b75e3"
  },
  "created": "2024-12-24T23:26:31.297Z",
  "updated": "2024-12-24T23:26:31.297Z",
  "snapshot": "4",
  "assistant_id": "35023fcf-24d1-4e9a-a0a2-52cb83c09cf9",
  "assistant_references": [
    {
      "name": "Testitall 014",
      "assistant_id": "392d3cd7-1ee1-4e74-9bf4-37684f2b75e3",
      "skill_reference": "actions skill"
    }
  ]
}